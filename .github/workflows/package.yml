name: Debian packaging

on:
  push:
    tags: [ 'v[0-9]+.[0-9]+.[0-9]+' ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install packaged dependencies
        run: .github/install_dependencies

      - name: Configure
        run: |
            cmake -B ${{github.workspace}}/build_Release_NFM -DCMAKE_BUILD_TYPE=Release -DNFM=TRUE

      - name: Build
        run: |
            VERBOSE=1 cmake --build ${{github.workspace}}/build_Release_NFM -j

      - name: create .deb content structure
        run: |
            mkdir -p .debpkg/DEBIAN
            mkdir -p .debpkg/usr/bin
            # echo -e "echo postinst" > .debpkg/DEBIAN/postinst
            # chmod +x .debpkg/DEBIAN/postinst
            cp ${{github.workspace}}/build_Release_NFM/src/rtl_airband .debpkg/usr/bin
            sudo chown -R root:root .debpkg/

      - uses: jiro4989/build-deb-action@v2
        with:
            package: rtlsdt-airband
            package_root: .debpkg
            maintainer: charlie-foxtrot
            version: ${{ github.ref }} # refs/tags/v*.*.*
            arch: 'amd64'
            depends: 'libc6 (>= 2.28)' # since Debian Buster
            desc: 'RTLSDR Airband - A multiband decoder for AM and NFM signals'
            compress_type: xz

      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: rtlsdr-airband-${{ github.ref }}
          draft: true
          prerelease: false
  
      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./rtlsdt-airband_${{ github.ref }}_amd64.deb
          asset_name: rtlsdt-airband_${{ github.ref }}_amd64.deb
          asset_content_type: application/vnd.debian.binary-package
  
      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
            
